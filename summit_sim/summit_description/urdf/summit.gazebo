<?xml version="1.0"?>
<robot>
  <!-- ros_control plugin -->
  <gazebo>
    <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
       <robotNamespace>/summit</robotNamespace>
       <legacyModeNS>true</legacyModeNS>
       <!--controlPeriod>0.003</controlPeriod-->
	<robotSimType>gazebo_ros_control/DefaultRobotHWSim</robotSimType>
    </plugin>
  </gazebo>

  <gazebo reference="base_footprint">
    <material>Gazebo/Green</material>
  </gazebo>

  <gazebo reference="base_link">
    <material>Gazebo/Red</material>
  </gazebo>

  <gazebo reference="back_left_wheel_dir">
    <material>Gazebo/Green</material>
  </gazebo>

  <gazebo reference="back_right_wheel_dir">
    <material>Gazebo/Green</material>
  </gazebo>

  <gazebo reference="front_left_wheel_dir">
    <material>Gazebo/Green</material>
  </gazebo>

  <gazebo reference="front_left_wheel_dir">
    <material>Gazebo/Green</material>
  </gazebo>

  <!-- gazebo reference="back_left_wheel">
    <mu1 value="4.0"/>
    <mu2 value="1.0"/>
    <fdir1 value="1 0 0"/>
    <material>Gazebo/Grey</material>
  </gazebo -->

  <gazebo reference="back_left_wheel">
    <mu1 value="50.0"/>
    <mu2 value="50.0"/>
    <fdir1 value="1 0 0"/>
    <material>Gazebo/Grey</material>
  </gazebo>

  <gazebo reference="back_right_wheel">
    <mu1 value="50.0"/>
    <mu2 value="50.0"/>
    <fdir1 value="1 0 0"/>
    <material>Gazebo/Grey</material>
  </gazebo>

  <gazebo reference="front_left_wheel">
    <mu1 value="50.0"/>
    <mu2 value="50.0"/>
    <fdir1 value="1 0 0"/>
    <material>Gazebo/Grey</material>
  </gazebo>

  <gazebo reference="front_right_wheel">
    <mu1 value="50.0"/>
    <mu2 value="50.0"/>
    <fdir1 value="1 0 0"/>
    <material>Gazebo/Grey</material>
  </gazebo>

  <!-- =================================================================== -->
  <!-- As a reference:
  https://github.com/tu-darmstadt-ros-pkg/hector_models/blob/kinetic-devel/hector_sensors_description/urdf/asus_camera.urdf.xacro
  -->
  <!-- ASUS xtion_pro_live (depth camera)-->
  <gazebo reference="camera_link" >
    <sensor type="depth" name="camera">
      <update_rate>20.0</update_rate>
      <camera>
        <horizontal_fov>1.3962634</horizontal_fov>
        <image>
          <format>R8G8B8</format>
          <width>640</width>
          <height>480</height>
        </image>
        <clip>
          <near>0.5</near>
          <far>9</far>
        </clip>
      </camera>
      <plugin name="camera_controller" filename="libgazebo_ros_openni_kinect.so">
        <cameraName>camera</cameraName>
        <imageTopicName>camera/rgb/image_raw</imageTopicName>
        <cameraInfoTopicName>camera/rgb/camera_info</cameraInfoTopicName>
        <depthImageTopicName>camera/depth/image_raw</depthImageTopicName>
        <depthImageCameraInfoTopicName>camera/depth/camera_info</depthImageCameraInfoTopicName>
        <pointCloudTopicName>camera/depth/points</pointCloudTopicName>
        <frameName>camera_depth_optical_frame</frameName>
      </plugin>
    </sensor>
  </gazebo>

  <!-- =================================================================== -->
  <!-- LASER SENSOR (hokuyo) -->
  <gazebo reference="hokuyo_laser_link">
    <!-- sensor type="gpu_ray" name="head_hokuyo_sensor" -->
    <sensor type="ray" name="head_hokuyo_sensor">
      <pose>0 0 0 0 0 0</pose>
      <visualize>false</visualize>
      <update_rate>30</update_rate>
      <ray>
        <scan>
          <horizontal>
            <!-- samples>720</samples>
            <resolution>1</resolution>
            <min_angle>-1.570796</min_angle>
            <max_angle>1.570796</max_angle -->
           <samples>1081</samples>
           <resolution>1</resolution>
           <min_angle>-2.35619449</min_angle>  <!-- +/-135 deg -->
           <max_angle>2.35619449</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.10</min>
          <max>30.0</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <!-- plugin name="gazebo_ros_head_hokuyo_controller" filename="libgazebo_ros_gpu_laser.so" -->
      <plugin name="gazebo_ros_head_hokuyo_controller" filename="libgazebo_ros_laser.so">
        <topicName>summit/laser/scan</topicName>
        <frameName>hokuyo_laser_link</frameName>
      </plugin>
    </sensor>
  </gazebo>

  <!-- =================================================================== -->
  <!-- IMU -->
  <gazebo>
    <plugin name="ros_imu" filename="libgazebo_ros_imu.so">
      <alwaysOn>true</alwaysOn>
      <robotNamespace>/summit</robotNamespace>
        <bodyName>base_footprint</bodyName>
        <topicName>imu_data</topicName>
	<serviceName>/imu_service</serviceName>
        <gaussianNoise>0.005</gaussianNoise>
        <xyzOffset>0 0 0</xyzOffset>
        <rpyOffset>0 0 0</rpyOffset>
    </plugin>
  </gazebo>

</robot>
